@inherits LayoutComponentBase
@using ZooCoursework.Services
@inject CurrentElementService CurrentElement
@inject NavigationManager Navigation

<PageTitle>ZooCoursework</PageTitle>

<style>
    .appBar{
        background-image: linear-gradient(180deg, #21A77F 0%, #5FCEAD 70%);
    }

    .logo{
        width: 50px;
        height: 50px;
    }

    .text {
        color: #21A77F;
    }
</style>

<CascadingValue Value="this">
<MudLayout Class="back">
    <MudAppBar Class="appBar">
        @if (CurrentElement.CurrentUser != null)
        {
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
            <MudSpacer />
            <MudIconButton Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Inherit" OnClick="GetAccount" Target="_blank" />
            <MudIconButton Icon="@Icons.Material.Filled.ExitToApp" Color="Color.Inherit" OnClick="Exit" Target="_blank"  />
        }
    </MudAppBar>
    <MudDrawer @bind-Open="@open" Breakpoint="Breakpoint.Xxl" ClipMode="DrawerClipMode.Never" Variant="@DrawerVariant.Responsive" >
        <MudDrawerHeader>
            <MudImage Src="/images/Лого.png" Class="logo"></MudImage><MudText Typo="Typo.h6" Class="text">САФАРИ</MudText>
        </MudDrawerHeader>
        
            <MudNavMenu>
                <NavMenu @ref="@_navMenu" />
        </MudNavMenu>
        
    </MudDrawer>
    <MudMainContent >
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
</CascadingValue>

<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider FullWidth="true"
                   MaxWidth="MaxWidth.ExtraSmall"
                   CloseButton="true"
                   DisableBackdropClick="true"
                   Position="DialogPosition.Center"
                   CloseOnEscapeKey="true" />
<MudSnackbarProvider />

@code {
    bool open = false;
    private NavMenu? _navMenu;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (_navMenu is not null)
            _navMenu.Update = true;
        await base.OnAfterRenderAsync(firstRender);
    }

    private void GetAccount() => Navigation.NavigateTo("/account");

    private void Exit()
    {
        CurrentElement.CurrentUser = null;
        Navigation.NavigateTo("/authorization");
    }

    private readonly MudTheme _currentTheme = new()
        {
            Palette = new PaletteLight
            {
                TextSecondary = "#21A77F",
                TextPrimary = "#21A77F",
                Primary = "#21A77F",
                Black = "#000000",
                White = "#FFFFFF",
                Secondary = "#00FF00",
                Tertiary = "#0000FF",
                Success = "#21A77F",
                Info = "#FFFF00",
                Warning = "#FF00FF",
                Error = "#C0C0C0",
                Dark = "#333333",
                Background = "#FFFFFF",
                PrimaryDarken = "#21A77F"
            }
        };

    void ToggleDrawer()
    {
        open = !open;
    }
}